#!/usr/bin/env python

import json
import os
import sys
import urllib.parse
from wsgiref.util import FileWrapper

if os.getenv("OPENSHIFT_REPO_DIR"):
    repo_dir = os.getenv("OPENSHIFT_REPO_DIR")
    production_environment = True
else:
    repo_dir = os.pardir
    production_environment = False
sys.path.append(os.path.join(repo_dir, "libs"))

static_dir = os.path.join(repo_dir, "wsgi/static")

class Static(object):
  def __init__(self, path, content_type):
    f = open(os.path.join(static_dir, path), 'rb')
    data = f.read()
    f.close()
    self.header = [('Content-Type', content_type), 
                   ('Content-Length', str(len(data)))]
    self.response = [data]

static_objects = {
    'ECC.css': Static('ECC.css', 'text/css'),
    'ECC-16.png': Static('ECC-16.png', 'image/png'),
    'master.html': Static('master.html', 'text/html; charset=UTF-8'),
    'mobile.html': Static('mobile.html', 'text/html; charset=UTF-8')
}

def application(environ, start_response):
    ctype = 'text/plain; charset=UTF-8'
    path_info = environ['PATH_INFO'].split('/')
    print('HTTP_ACCEPT_ENCODING' + '=' + environ['HTTP_ACCEPT_ENCODING'])
    if path_info[1] == 'json':
        length = int(environ['CONTENT_LENGTH'])
        request = environ['wsgi.input'].read(length).decode()
        args = json.loads(request)
        print(args)
        contents = nutrika.get_contents(path_info[2], args)
        response_body = json.dumps(contents)
        #print(response_body)
        ctype = 'application/json; charset=UTF-8'
    elif path_info[1] == 'ref':
        ref = reference_objects[path_info[2]]
        start_response('200 OK', ref.header)
        return ref.response
    elif not path_info[1]:
        print('HTTP_USER_AGENT' + '=' + environ['HTTP_USER_AGENT'])
        if 'iPad' in environ['HTTP_USER_AGENT']:
            static = static_objects['mobile.html']
        else:
            static = static_objects['master.html']
        start_response('200 OK', static.header)
        return static.response
    elif path_info[1] == 'mobile':
        static = static_objects['mobile.html']
        start_response('200 OK', static.header)
        return static.response
    elif path_info[1] == 'static':
        static = static_objects[path_info[2]]
        start_response('200 OK', static.header)
        return static.response
    elif path_info[1] == 'health':
        response_body = "1"
    elif path_info[1] == 'env':
        response_body = '\n'.join(['%s: %s' % (key, value)
                                   for key, value in sorted(environ.items())])
    else:
        response_body = ''

    status = '200 OK'
    response_headers = [('Content-Type', ctype), 
                        ('Content-Length', str(len(response_body)))]
    start_response(status, response_headers)
    return [response_body.encode('UTF-8') ]

#
# Below for testing only
#
if __name__ == '__main__':
    from wsgiref.simple_server import make_server
    #httpd = make_server('localhost', 8051, application)
    httpd = make_server('192.168.1.90', 8051, application)
    httpd.serve_forever()

